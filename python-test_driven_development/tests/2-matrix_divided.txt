First import ``matrix_divided`` from the ``matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix = "not a matrix"
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = "not a number"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, float('inf')]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, float('inf')]]

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, float('nan')]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, float('nan')]]

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, float('inf')]]
>>> div = float('inf')
>>> matrix_divided(matrix, div)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
